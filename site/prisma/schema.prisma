// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    listings      Listing[]
    bids          Bid[]
}

model Listing {
    id          String         @id @default(cuid())
    title       String
    description String
    price       Float
    images      ListingImage[]
    userId      String
    status      String         @default("active")
    expires     DateTime
    createdAt   DateTime       @default(now())
    user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
    bids        Bid[]
}

model ListingImage {
    id        String  @id @default(cuid())
    url       String
    caption   String?
    listingId String
    listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model Bid {
    id        String   @id @default(cuid())
    price     Float
    userId    String
    listingId String
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    listing   Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
