@startuml ClassDiagram

' class Account {
'   +id: String
'   +userId: String
'   +type: String
'   +provider: String
'   +providerAccountId: String
'   +refresh_token: String
'   +access_token: String
'   +expires_at: Int
'   +token_type: String
'   +scope: String
'   +id_token: String
'   +session_state: String
' }

' class Session {
'   +id: String
'   +sessionToken: String
'   +userId: String
'   +expires: DateTime
' }

class User {
  +id: String
  +name: String
  +email: String
  +emailVerified: DateTime
  +image: String
  +userGroupIds: String[]
}

class Listing {
  +id: String
  +title: String
  +description: String
  +price: Float
  +image: String
  +userId: String
  +status: String
  +expires: DateTime
}

class Bid {
  +id: String
  +price: Float
  +userId: String
  +listingId: String
}
enum UserGroupType {
  ADMIN
}

class UserGroup {
  +id: String
  +users: User[]
  +type: UserGroupType
}

' associations between entities
UserGroupType "1" -- "1" UserGroup : Has
' User "1" -- "0..*" Session : Logs in
' User "1" -- "1..*" Account : Has
User "1" -- "0..*" UserGroup : Belongs to



class ListingsRoute {
  +createListing()
  +updateListing()
  +deleteListing()
  +getListings()
  +getListingById()
  +getListingsByUserId()
}

class AuthenticationRoute {
  +createSession()
  +updateSession()
  +deleteSession()
  +createUser()
  +deleteUser()
  +createAccount()
  +deleteAccount()
  +getUserGroup()
}

class BidsRoute {
  +createBid()
  +updateBid()
  +deleteBid()
  +getBidsByListing()
  +getBidById()
  +getBidsByUserId()
}

' associations between routes and entities
' AuthenticationRoute "1" -- "0..*" Session : CRUD
AuthenticationRoute "1" -- "0..*" User : CRUD
' AuthenticationRoute "1" -- "0..*" Account : CRUD

ListingsRoute "1" -- "0..*" Listing : CRUD
ListingsRoute "1" -- "1" AuthenticationRoute : Reads

BidsRoute "1" -- "0..*" Bid : CRUD
BidsRoute "1" -- "1" AuthenticationRoute : Reads


interface LandingPage
interface AboutPage
interface LoginPage
interface ListingPage
interface CreateListingPage
interface UserProfilePage
interface AdminPage
interface NavigationComponent
interface ListingsFeedComponent
interface AddBidComponent


' dependency graph of pages and components
LandingPage <.. AboutPage
LandingPage <.. NavigationComponent
LandingPage <.. ListingsFeedComponent

NavigationComponent <.. LoginPage
NavigationComponent <.. CreateListingPage
NavigationComponent <.. UserProfilePage

ListingsFeedComponent <.. AddBidComponent
ListingsFeedComponent <.. ListingPage


' these are the routes that the pages and components are connected to
' these connections im unsure of how to represent
LoginPage -- AuthenticationRoute
ListingPage -- ListingsRoute
CreateListingPage -- ListingsRoute
UserProfilePage -- AuthenticationRoute
AdminPage -- AuthenticationRoute
AdminPage -- ListingsRoute
AdminPage -- BidsRoute
AddBidComponent -- BidsRoute




@enduml
